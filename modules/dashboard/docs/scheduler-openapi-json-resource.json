{
    "openapi": "3.0.0",
    "info": {
        "title": "scheduler Module",
        "description": "API documentation for scheduler module",
        "contact": {
            "name": "Ananda Douglas",
            "email": "admin@crackit.co.ke"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://playground:8080/v1",
            "description": "API Development Server"
        },
        {
            "url": "http://afya365.crackit.co.ke/v1",
            "description": "API Staging Server"
        },
        {
            "url": "https://endpoints.afya365.com/v1",
            "description": "API Production Server"
        }
    ],
    "paths": {
        "/about": {
            "get": {
                "tags": [
                    "SCHEDULER"
                ],
                "summary": "Module Info. ",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/About"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {}
                ]
            }
        },
        "/scheduler/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Lists all Appointments models ",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page No.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Page Size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_user_id",
                        "in": "query",
                        "description": "User Id",
                        "schema": {
                            "type": "bigint"
                        }
                    },
                    {
                        "name": "_date",
                        "in": "query",
                        "description": "Date",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "_start_time",
                        "in": "query",
                        "description": "Start Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_end_time",
                        "in": "query",
                        "description": "End Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_contact_name",
                        "in": "query",
                        "description": "Contact Name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_email_address",
                        "in": "query",
                        "description": "Email Address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_mobile_number",
                        "in": "query",
                        "description": "Mobile Number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_subject",
                        "in": "query",
                        "description": "Subject",
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "_appointment_type",
                        "in": "query",
                        "description": "Appointment Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_status",
                        "in": "query",
                        "description": "Status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_created_at",
                        "in": "query",
                        "description": "Created At",
                        "schema": {
                            "type": "timestamp"
                        }
                    },
                    {
                        "name": "_updated_at",
                        "in": "query",
                        "description": "Updated At",
                        "schema": {
                            "type": "timestamp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a data payload object for all scheduler/appointments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Appointments"
                                                    }
                                                },
                                                "countOnPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": "50"
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "paginationLinks": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "previous": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "self": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Creates a new Appointments model ",
                "requestBody": {
                    "description": "Fill in appointments data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Appointments"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Appointments"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "appointments created successfully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "errors": {
                                                    "$ref": "#/components/schemas/Appointments"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "Some data could not be validated"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "danger"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/pending-appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Lists all Pending Appointments models ",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page No.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Page Size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_user_id",
                        "in": "query",
                        "description": "User Id",
                        "schema": {
                            "type": "bigint"
                        }
                    },
                    {
                        "name": "_date",
                        "in": "query",
                        "description": "Date",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "_start_time",
                        "in": "query",
                        "description": "Start Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_end_time",
                        "in": "query",
                        "description": "End Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_contact_name",
                        "in": "query",
                        "description": "Contact Name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_email_address",
                        "in": "query",
                        "description": "Email Address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_mobile_number",
                        "in": "query",
                        "description": "Mobile Number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_subject",
                        "in": "query",
                        "description": "Subject",
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "_appointment_type",
                        "in": "query",
                        "description": "Appointment Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_status",
                        "in": "query",
                        "description": "Status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_created_at",
                        "in": "query",
                        "description": "Created At",
                        "schema": {
                            "type": "timestamp"
                        }
                    },
                    {
                        "name": "_updated_at",
                        "in": "query",
                        "description": "Updated At",
                        "schema": {
                            "type": "timestamp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a data payload object for all scheduler/appointments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Appointments"
                                                    }
                                                },
                                                "countOnPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": "50"
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "paginationLinks": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "previous": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "self": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/get-slots": {
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get all available slots ",
                "requestBody": {
                    "description": "Fill in appointments data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Appointments"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Appointments"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "appointments created successfully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "errors": {
                                                    "$ref": "#/components/schemas/Appointments"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "Some data could not be validated"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "danger"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/sms": {
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Send SMS for an appointment",
                "responses": {
                    "200": {
                        "description": "SMS sent successfully"
                    }
                }
            }
        },
        "/scheduler/slot-suggestion/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Display the next available slots for a particular affected appointment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointments unique ID to load",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Displays a single Appointments model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/Appointments"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/self-booking": {
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Self-booking for an appointment",
                "responses": {
                    "200": {
                        "description": "Self-booking successful"
                    }
                }
            }
        },
        "/scheduler/types": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get meeting types",
                "responses": {
                    "200": {
                        "description": "Returns a list of meeting types"
                    }
                }
            }
        },
        "/scheduler/priorities": {
            "get": {
                "tags": [
                    "Appointment Priorities"
                ],
                "summary": "Get appointment priority labels and codes",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page No.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Page Size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a data payload object for all scheduler/priorities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Appointments"
                                                    }
                                                },
                                                "countOnPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": "50"
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "paginationLinks": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "previous": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "self": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/appointments?page=1&per-page=25"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/attendance-confirmation/{appointment_id}/{attendee_id}": {
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Confirm attendance for an appointment",
                "responses": {
                    "200": {
                        "description": "Attendance confirmed successfully"
                    }
                }
            }
        },
        "/scheduler/checkin/{id}": {
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Mark an appointment as Attended",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointments unique ID to find the appointment",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Finds a single Appointments model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/Appointments"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/appointments/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Displays a single Appointments model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointments unique ID to load",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Displays a single Appointments model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/Appointments"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Updates an existing Appointments model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointments unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the Appointments model to be updated based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Appointments"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Appointments"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "appointments updated successfully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Deletes an existing Appointments model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointments unique ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deletion successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Restores a deleted Appointments model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointments unique ID to restore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Restoration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/space-details": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get space details",
                "responses": {
                    "200": {
                        "description": "Returns space details"
                    }
                }
            }
        },
        "/scheduler/approve/{id}": {
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Approve an existing Appointments model with a status pending",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointments unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the Appointments model to be approved based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Appointments"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Appointments"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "appointments approved successfully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/reject/{id}": {
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Reject an existing Appointments model with a status pending",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointments unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the Appointments model to be rejected based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Appointments"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Appointments"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "appointments rejected successfully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/cancel/{id}": {
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Cancel an existing Appointments model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointments unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the Appointments model to be canceled based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Appointments"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Appointments"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "appointments canceled successfully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/remove-attendee/{id}": {
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Deletes an existing Appointments Attendee model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointments unique ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deletion successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/availabilities": {
            "get": {
                "tags": [
                    "Availability"
                ],
                "summary": "Lists all Availability models ",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page No.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Page Size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_user_id",
                        "in": "query",
                        "description": "User Id",
                        "schema": {
                            "type": "bigint"
                        }
                    },
                    {
                        "name": "_start_date",
                        "in": "query",
                        "description": "Start Date",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "_end_date",
                        "in": "query",
                        "description": "End Date",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "_start_time",
                        "in": "query",
                        "description": "Start Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_end_time",
                        "in": "query",
                        "description": "End Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_is_full_day",
                        "in": "query",
                        "description": "Is Full Day",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "_description",
                        "in": "query",
                        "description": "Description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_created_at",
                        "in": "query",
                        "description": "Created At",
                        "schema": {
                            "type": "timestamp"
                        }
                    },
                    {
                        "name": "_updated_at",
                        "in": "query",
                        "description": "Updated At",
                        "schema": {
                            "type": "timestamp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a data payload object for all scheduler/availabilities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Availability"
                                                    }
                                                },
                                                "countOnPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": "50"
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "paginationLinks": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/availabilities?page=1&per-page=25"
                                                        },
                                                        "previous": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/availabilities?page=1&per-page=25"
                                                        },
                                                        "self": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/availabilities?page=1&per-page=25"
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/availabilities?page=1&per-page=25"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/availabilities?page=1&per-page=25"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/availability": {
            "post": {
                "tags": [
                    "Availability"
                ],
                "summary": "Creates a new Availability model ",
                "requestBody": {
                    "description": "Fill in availability data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Availability"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Availability"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "availability created succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "errors": {
                                                    "$ref": "#/components/schemas/Availability"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "Some data could not be validated"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "danger"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/availability/{id}": {
            "get": {
                "tags": [
                    "Availability"
                ],
                "summary": "Displays a single Availability model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Availability unique ID to load",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Displays a single Availability model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/Availability"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Availability"
                ],
                "summary": "Updates an existing Availability model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Availability unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the Availability model to be updated based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Availability"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Availability"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "availability updated succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Availability"
                ],
                "summary": "Deletes an existing Availability model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Availability unique ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deletion successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Availability"
                ],
                "summary": "Restores a deleted Availability model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Availability unique ID to restore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Restoration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/dashboard": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "retuns all dasboard related objects",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page No.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Page Size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_user_id",
                        "in": "query",
                        "description": "User Id",
                        "schema": {
                            "type": "bigint"
                        }
                    },
                    {
                        "name": "_start_time",
                        "in": "query",
                        "description": "Start Time",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "_end_time",
                        "in": "query",
                        "description": "End Time",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "_slot_duration",
                        "in": "query",
                        "description": "Slot Duration",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_booking_window",
                        "in": "query",
                        "description": "Booking Window",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_created_at",
                        "in": "query",
                        "description": "Created At",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_updated_at",
                        "in": "query",
                        "description": "Updated At",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a data payload object for all scheduler/dashbaord",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Settings"
                                                    }
                                                },
                                                "countOnPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": "50"
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "paginationLinks": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/settings?page=1&per-page=25"
                                                        },
                                                        "previous": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/settings?page=1&per-page=25"
                                                        },
                                                        "self": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/settings?page=1&per-page=25"
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/settings?page=1&per-page=25"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/settings?page=1&per-page=25"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Lists all Settings models ",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page No.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Page Size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_user_id",
                        "in": "query",
                        "description": "User Id",
                        "schema": {
                            "type": "bigint"
                        }
                    },
                    {
                        "name": "_start_time",
                        "in": "query",
                        "description": "Start Time",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "_end_time",
                        "in": "query",
                        "description": "End Time",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "_slot_duration",
                        "in": "query",
                        "description": "Slot Duration",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_booking_window",
                        "in": "query",
                        "description": "Booking Window",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_created_at",
                        "in": "query",
                        "description": "Created At",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_updated_at",
                        "in": "query",
                        "description": "Updated At",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a data payload object for all scheduler/settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Settings"
                                                    }
                                                },
                                                "countOnPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": "50"
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "paginationLinks": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/settings?page=1&per-page=25"
                                                        },
                                                        "previous": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/settings?page=1&per-page=25"
                                                        },
                                                        "self": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/settings?page=1&per-page=25"
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/settings?page=1&per-page=25"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/settings?page=1&per-page=25"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Creates a new Settings model ",
                "requestBody": {
                    "description": "Fill in settings data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Settings"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Settings"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "settings created succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "errors": {
                                                    "$ref": "#/components/schemas/Settings"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "Some data could not be validated"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "danger"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/settings/{id}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Displays a single Settings model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Settings unique ID to load",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Displays a single Settings model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/Settings"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Updates an existing Settings model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Settings unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the Settings model to be updated based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Settings"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Settings"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "settings updated succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Settings"
                ],
                "summary": "Deletes an existing Settings model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Settings unique ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deletion successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Restores a deleted Settings model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Settings unique ID to restore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Restoration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Lists all Events models ",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page No.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Page Size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_title",
                        "in": "query",
                        "description": "Title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_description",
                        "in": "query",
                        "description": "Description",
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "_event_date",
                        "in": "query",
                        "description": "Event Date",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "_start_time",
                        "in": "query",
                        "description": "Start Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_end_time",
                        "in": "query",
                        "description": "End Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_is_deleted",
                        "in": "query",
                        "description": "Is Deleted",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_created_at",
                        "in": "query",
                        "description": "Created At",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_updated_at",
                        "in": "query",
                        "description": "Updated At",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a data payload object for all scheduler/events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Events"
                                                    }
                                                },
                                                "countOnPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": "50"
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "paginationLinks": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/events?page=1&per-page=25"
                                                        },
                                                        "previous": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/events?page=1&per-page=25"
                                                        },
                                                        "self": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/events?page=1&per-page=25"
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/events?page=1&per-page=25"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/events?page=1&per-page=25"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Creates a new Events model ",
                "requestBody": {
                    "description": "Fill in events data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Events"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Events"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "events created succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "errors": {
                                                    "$ref": "#/components/schemas/Events"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "Some data could not be validated"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "danger"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Displays a single Events model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Events unique ID to load",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Displays a single Events model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/Events"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Updates an existing Events model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Events unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the Events model to be updated based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Events"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Events"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "events updated succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Deletes an existing Event model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event unique ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deletion successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Events"
                ],
                "summary": "Restores a deleted Events model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Events unique ID to restore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Restoration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/events/{id}/cancel": {
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Cancel an existing Events model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Events unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the Events model to be updated based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Events"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Events"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "events canceled succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/meeting-types": {
            "get": {
                "tags": [
                    "MeetingTypes"
                ],
                "summary": "Lists all MeetingTypes models ",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page No.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Page Size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_type",
                        "in": "query",
                        "description": "Type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_is_deleted",
                        "in": "query",
                        "description": "Is Deleted",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "_created_at",
                        "in": "query",
                        "description": "Created At",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_updated_at",
                        "in": "query",
                        "description": "Updated At",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a data payload object for all scheduler/meeting-types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/MeetingTypes"
                                                    }
                                                },
                                                "countOnPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": "50"
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "paginationLinks": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/meeting-types?page=1&per-page=25"
                                                        },
                                                        "previous": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/meeting-types?page=1&per-page=25"
                                                        },
                                                        "self": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/meeting-types?page=1&per-page=25"
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/meeting-types?page=1&per-page=25"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/meeting-types?page=1&per-page=25"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/meeting-type": {
            "post": {
                "tags": [
                    "MeetingTypes"
                ],
                "summary": "Creates a new MeetingTypes model ",
                "requestBody": {
                    "description": "Fill in meeting-type data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeetingTypes"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/MeetingTypes"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "meeting-type created succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "errors": {
                                                    "$ref": "#/components/schemas/MeetingTypes"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "Some data could not be validated"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "danger"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/meeting-type/{id}": {
            "get": {
                "tags": [
                    "MeetingTypes"
                ],
                "summary": "Displays a single MeetingTypes model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MeetingTypes unique ID to load",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Displays a single MeetingTypes model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/MeetingTypes"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MeetingTypes"
                ],
                "summary": "Updates an existing MeetingTypes model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MeetingTypes unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the MeetingTypes model to be updated based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeetingTypes"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/MeetingTypes"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "meeting-type updated succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MeetingTypes"
                ],
                "summary": "Deletes an existing MeetingTypes model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MeetingTypes unique ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deletion successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "MeetingTypes"
                ],
                "summary": "Restores a deleted MeetingTypes model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MeetingTypes unique ID to restore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Restoration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/settings/create": {
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Creates a new Settings model ",
                "requestBody": {
                    "description": "Fill in settings data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Settings"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Settings"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "settings created successfully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "errors": {
                                                    "$ref": "#/components/schemas/Settings"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "Some data could not be validated"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "danger"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/settings/{id}/view": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Displays a single Settings model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Settings unique ID to load",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Displays a single Settings model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/Settings"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/settings/{id}/update": {
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Updates an existing Settings model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Settings unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the Settings model to be updated based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Settings"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Settings"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "settings updated successfully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/settings/{id}/delete": {
            "delete": {
                "tags": [
                    "Settings"
                ],
                "summary": "Deletes an existing Settings model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Settings unique ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deletion successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/settings/{id}/patch": {
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Restores a deleted Settings model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Settings unique ID to restore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Restoration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/space-availabilities": {
            "get": {
                "tags": [
                    "SpaceAvailability"
                ],
                "summary": "Lists all SpaceAvailability models ",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page No.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Page Size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_space_id",
                        "in": "query",
                        "description": "Space Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_date",
                        "in": "query",
                        "description": "Date",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "_start_time",
                        "in": "query",
                        "description": "Start Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_end_time",
                        "in": "query",
                        "description": "End Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_is_deleted",
                        "in": "query",
                        "description": "Is Deleted",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_created_at",
                        "in": "query",
                        "description": "Created At",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_updated_at",
                        "in": "query",
                        "description": "Updated At",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a data payload object for all scheduler/space-availabilities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/SpaceAvailability"
                                                    }
                                                },
                                                "countOnPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": "50"
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "paginationLinks": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/space-availabilities?page=1&per-page=25"
                                                        },
                                                        "previous": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/space-availabilities?page=1&per-page=25"
                                                        },
                                                        "self": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/space-availabilities?page=1&per-page=25"
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/space-availabilities?page=1&per-page=25"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/space-availabilities?page=1&per-page=25"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/space-availability": {
            "post": {
                "tags": [
                    "SpaceAvailability"
                ],
                "summary": "Creates a new SpaceAvailability model ",
                "requestBody": {
                    "description": "Fill in space-availability data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpaceAvailability"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/SpaceAvailability"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "space-availability created succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "errors": {
                                                    "$ref": "#/components/schemas/SpaceAvailability"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "Some data could not be validated"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "danger"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/space-availability/{id}": {
            "get": {
                "tags": [
                    "SpaceAvailability"
                ],
                "summary": "Displays a single SpaceAvailability model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SpaceAvailability unique ID to load",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Displays a single SpaceAvailability model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/SpaceAvailability"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SpaceAvailability"
                ],
                "summary": "Updates an existing SpaceAvailability model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SpaceAvailability unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the SpaceAvailability model to be updated based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpaceAvailability"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/SpaceAvailability"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "space-availability updated succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SpaceAvailability"
                ],
                "summary": "Deletes an existing SpaceAvailability model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SpaceAvailability unique ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deletion successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "SpaceAvailability"
                ],
                "summary": "Restores a deleted SpaceAvailability model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SpaceAvailability unique ID to restore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Restoration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/spaces": {
            "get": {
                "tags": [
                    "Space"
                ],
                "summary": "Lists all Space models ",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page No.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Page Size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_level_id",
                        "in": "query",
                        "description": "Level Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_name",
                        "in": "query",
                        "description": "Name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_opening_time",
                        "in": "query",
                        "description": "Start Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_closing_time",
                        "in": "query",
                        "description": "End Time",
                        "schema": {
                            "type": "time"
                        }
                    },
                    {
                        "name": "_is_locked",
                        "in": "query",
                        "description": "Is Locked",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "_location",
                        "in": "query",
                        "description": "Location",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_description",
                        "in": "query",
                        "description": "Description",
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "_is_deleted",
                        "in": "query",
                        "description": "Is Deleted",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_created_at",
                        "in": "query",
                        "description": "Created At",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_updated_at",
                        "in": "query",
                        "description": "Updated At",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a data payload object for all scheduler/spaces",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Space"
                                                    }
                                                },
                                                "countOnPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": "50"
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "paginationLinks": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/spaces?page=1&per-page=25"
                                                        },
                                                        "previous": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/spaces?page=1&per-page=25"
                                                        },
                                                        "self": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/spaces?page=1&per-page=25"
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/spaces?page=1&per-page=25"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/spaces?page=1&per-page=25"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/space": {
            "post": {
                "tags": [
                    "Space"
                ],
                "summary": "Creates a new Space model ",
                "requestBody": {
                    "description": "Fill in space data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Space"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Space"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "space created succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "errors": {
                                                    "$ref": "#/components/schemas/Space"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "Some data could not be validated"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "danger"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/space/{id}": {
            "get": {
                "tags": [
                    "Space"
                ],
                "summary": "Displays a single Space model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Space unique ID to load",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Displays a single Space model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/Space"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Space"
                ],
                "summary": "Updates an existing Space model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Space unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the Space model to be updated based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Space"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/Space"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "space updated succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Space"
                ],
                "summary": "Deletes an existing Space model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Space unique ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deletion successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Space"
                ],
                "summary": "Restores a deleted Space model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Space unique ID to restore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Restoration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/lock-space/{id}": {
            "put": {
                "tags": [
                    "Space"
                ],
                "summary": "Locks a space",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Space unique ID to load",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lock a space",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/Space"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/system-settings": {
            "get": {
                "tags": [
                    "SystemSettings"
                ],
                "summary": "Lists all SystemSettings models ",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page No.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Page Size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "Search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_app_name",
                        "in": "query",
                        "description": "App Name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_system_email",
                        "in": "query",
                        "description": "System Email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_category",
                        "in": "query",
                        "description": "Category",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_email_scheme",
                        "in": "query",
                        "description": "Email Scheme",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_email_smtps",
                        "in": "query",
                        "description": "Email Smtps",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_email_port",
                        "in": "query",
                        "description": "Email Port",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_email_encryption",
                        "in": "query",
                        "description": "Email Encryption",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_email_password",
                        "in": "query",
                        "description": "Email Password",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_description",
                        "in": "query",
                        "description": "Description",
                        "schema": {
                            "type": "text"
                        }
                    },
                    {
                        "name": "_email_username",
                        "in": "query",
                        "description": "Email Username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_updated_at",
                        "in": "query",
                        "description": "Updated At",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_created_at",
                        "in": "query",
                        "description": "Created At",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "_is_deleted",
                        "in": "query",
                        "description": "Is Deleted",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a data payload object for all scheduler/system-settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/SystemSettings"
                                                    }
                                                },
                                                "countOnPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalCount": {
                                                    "type": "integer",
                                                    "example": "50"
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "totalPages": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "paginationLinks": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/system-settings?page=1&per-page=25"
                                                        },
                                                        "previous": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/system-settings?page=1&per-page=25"
                                                        },
                                                        "self": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/system-settings?page=1&per-page=25"
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/system-settings?page=1&per-page=25"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "v1/v1/scheduler/system-settings?page=1&per-page=25"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SystemSettings"
                ],
                "summary": "Creates a new SystemSettings model ",
                "requestBody": {
                    "description": "Fill in system-settings data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SystemSettings"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/SystemSettings"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "system-settings created succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Data Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "errors": {
                                                    "$ref": "#/components/schemas/SystemSettings"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "Some data could not be validated"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "danger"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/scheduler/system-settings/{id}": {
            "get": {
                "tags": [
                    "SystemSettings"
                ],
                "summary": "Displays a single SystemSettings model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SystemSettings unique ID to load",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Displays a single SystemSettings model.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "$ref": "#/components/schemas/SystemSettings"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errorPayload": {
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer",
                                                    "example": 404
                                                },
                                                "errorMessage": {
                                                    "type": "string",
                                                    "example": "Not found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SystemSettings"
                ],
                "summary": "Updates an existing SystemSettings model",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SystemSettings unique ID to load and update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Finds the SystemSettings model to be updated based on its primary key value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SystemSettings"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Data payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/SystemSettings"
                                                },
                                                "toastMessage": {
                                                    "type": "string",
                                                    "example": "system-settings updated succefully"
                                                },
                                                "toastTheme": {
                                                    "type": "string",
                                                    "example": "success"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SystemSettings"
                ],
                "summary": "Deletes an existing SystemSettings model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SystemSettings unique ID to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deletion successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "SystemSettings"
                ],
                "summary": "Restores a deleted SystemSettings model.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SystemSettings unique ID to restore",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Restoration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataPayload": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "About": {
                "properties": {
                    "id": {
                        "title": "Module ID",
                        "type": "string",
                        "example": "SCHEDULER"
                    },
                    "name": {
                        "title": "Module Name",
                        "type": "string",
                        "example": "SCHEDULER Module"
                    }
                },
                "type": "object"
            },
            "AppointmentAttachments": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "appointment_id": {
                        "title": "Appointment id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "file_url": {
                        "title": "File url",
                        "type": "string",
                        "example": "string"
                    },
                    "file_name": {
                        "title": "File name",
                        "type": "string",
                        "example": "string"
                    },
                    "is_deleted": {
                        "title": "Is deleted",
                        "type": "int",
                        "example": "int"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "integer",
                        "example": "integer"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "integer",
                        "example": "integer"
                    }
                },
                "type": "object"
            },
            "AppointmentAttendees": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "appointment_id": {
                        "title": "Appointment id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "staff_id": {
                        "title": "Staff id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "example": "string"
                    },
                    "start_time": {
                        "title": "Start time",
                        "type": "string",
                        "example": "string"
                    },
                    "end_time": {
                        "title": "End time",
                        "type": "string",
                        "example": "string"
                    },
                    "is_deleted": {
                        "title": "Is deleted",
                        "type": "int",
                        "example": "int"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "integer",
                        "example": "integer"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "integer",
                        "example": "integer"
                    }
                },
                "type": "object"
            },
            "Appointments": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "user_id": {
                        "title": "User id",
                        "type": "int",
                        "example": "int"
                    },
                    "appointment_date": {
                        "title": "Date",
                        "type": "string",
                        "example": "string"
                    },
                    "start_time": {
                        "title": "Start time",
                        "type": "string",
                        "example": "string"
                    },
                    "end_time": {
                        "title": "End time",
                        "type": "string",
                        "example": "string"
                    },
                    "contact_name": {
                        "title": "Contact name",
                        "type": "string",
                        "example": "string"
                    },
                    "email_address": {
                        "title": "Email address",
                        "type": "string",
                        "example": "string"
                    },
                    "mobile_number": {
                        "title": "Mobile number",
                        "type": "string",
                        "example": "string"
                    },
                    "subject": {
                        "title": "Subject",
                        "type": "string",
                        "example": "string"
                    },
                    "appointment_type": {
                        "title": "Appointment type",
                        "type": "string",
                        "example": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "example": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "example": "string"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "string",
                        "example": "string"
                    }
                },
                "type": "object"
            },
            "Availability": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "user_id": {
                        "title": "User id",
                        "type": "int",
                        "example": "int"
                    },
                    "start_date": {
                        "title": "Start date",
                        "type": "string",
                        "example": "string"
                    },
                    "end_date": {
                        "title": "End date",
                        "type": "string",
                        "example": "string"
                    },
                    "start_time": {
                        "title": "Start time",
                        "type": "string",
                        "example": "string"
                    },
                    "end_time": {
                        "title": "End time",
                        "type": "string",
                        "example": "string"
                    },
                    "is_full_day": {
                        "title": "Is full day",
                        "type": "boo",
                        "example": "boo"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "example": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "example": "string"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "string",
                        "example": "string"
                    }
                },
                "type": "object"
            },
            "Booked": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "user_id": {
                        "title": "User id",
                        "type": "int",
                        "example": "int"
                    },
                    "start_date": {
                        "title": "Start date",
                        "type": "string",
                        "example": "string"
                    },
                    "end_date": {
                        "title": "End date",
                        "type": "string",
                        "example": "string"
                    },
                    "start_time": {
                        "title": "Start time",
                        "type": "string",
                        "example": "string"
                    },
                    "end_time": {
                        "title": "End time",
                        "type": "string",
                        "example": "string"
                    },
                    "is_full_day": {
                        "title": "Is full day",
                        "type": "boo",
                        "example": "boo"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "example": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "string",
                        "example": "string"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "string",
                        "example": "string"
                    }
                },
                "type": "object"
            },
            "Events": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string",
                        "example": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "example": "string"
                    },
                    "event_date": {
                        "title": "Event date",
                        "type": "string",
                        "example": "string"
                    },
                    "start_time": {
                        "title": "Start time",
                        "type": "string",
                        "example": "string"
                    },
                    "end_time": {
                        "title": "End time",
                        "type": "string",
                        "example": "string"
                    },
                    "is_deleted": {
                        "title": "Is deleted",
                        "type": "int",
                        "example": "int"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "integer",
                        "example": "integer"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "integer",
                        "example": "integer"
                    }
                },
                "type": "object"
            },
            "MeetingTypes": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "example": "string"
                    },
                    "is_deleted": {
                        "title": "Is deleted",
                        "type": "boo",
                        "example": "boo"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "int",
                        "example": "int"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "int",
                        "example": "int"
                    }
                },
                "type": "object"
            },
            "OperationReasons": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "entity_id": {
                        "title": "Entity id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "example": "string"
                    },
                    "entity_type": {
                        "title": "Entity type",
                        "type": "integer",
                        "example": "integer"
                    },
                    "reason": {
                        "title": "Reason",
                        "type": "string",
                        "example": "string"
                    },
                    "is_deleted": {
                        "title": "Is deleted",
                        "type": "int",
                        "example": "int"
                    },
                    "created_by": {
                        "title": "Created by",
                        "type": "integer",
                        "example": "integer"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "integer",
                        "example": "integer"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "integer",
                        "example": "integer"
                    }
                },
                "type": "object"
            },
            "Settings": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "user_id": {
                        "title": "User id",
                        "type": "int",
                        "example": "int"
                    },
                    "start_time": {
                        "title": "Start time",
                        "type": "string",
                        "example": "string"
                    },
                    "end_time": {
                        "title": "End time",
                        "type": "string",
                        "example": "string"
                    },
                    "slot_duration": {
                        "title": "Slot duration",
                        "type": "integer",
                        "example": "integer"
                    },
                    "booking_window": {
                        "title": "Booking window",
                        "type": "integer",
                        "example": "integer"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "int",
                        "example": "int"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "int",
                        "example": "int"
                    }
                },
                "type": "object"
            },
            "Space": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "level_id": {
                        "title": "Level id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "example": "string"
                    },
                    "opening_time": {
                        "title": "Open Time",
                        "type": "string",
                        "example": "string"
                    },
                    "closing_time": {
                        "title": "Close Time",
                        "type": "string",
                        "example": "string"
                    },
                    "is_locked": {
                        "title": "Is locked",
                        "type": "boo",
                        "example": "boo"
                    },
                    "capacity": {
                        "title": "Capacity",
                        "type": "integer",
                        "example": "Integer"
                    },
                    "location": {
                        "title": "Location",
                        "type": "string",
                        "example": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "example": "string"
                    },
                    "is_deleted": {
                        "title": "Is deleted",
                        "type": "int",
                        "example": "int"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "integer",
                        "example": "integer"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "integer",
                        "example": "integer"
                    }
                },
                "type": "object"
            },
            "SpaceAvailability": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "space_id": {
                        "title": "Space id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "date": {
                        "title": "Date",
                        "type": "string",
                        "example": "string"
                    },
                    "start_time": {
                        "title": "Start time",
                        "type": "string",
                        "example": "string"
                    },
                    "end_time": {
                        "title": "End time",
                        "type": "string",
                        "example": "string"
                    },
                    "is_deleted": {
                        "title": "Is deleted",
                        "type": "int",
                        "example": "int"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "integer",
                        "example": "integer"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "integer",
                        "example": "integer"
                    }
                },
                "type": "object"
            },
            "SystemSettings": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer",
                        "example": "integer"
                    },
                    "app_name": {
                        "title": "App name",
                        "type": "string",
                        "example": "string"
                    },
                    "system_email": {
                        "title": "System email",
                        "type": "string",
                        "example": "string"
                    },
                    "category": {
                        "title": "Category",
                        "type": "string",
                        "example": "string"
                    },
                    "email_scheme": {
                        "title": "Email scheme",
                        "type": "string",
                        "example": "string"
                    },
                    "email_smtps": {
                        "title": "Email smtps",
                        "type": "string",
                        "example": "string"
                    },
                    "email_port": {
                        "title": "Email port",
                        "type": "integer",
                        "example": "integer"
                    },
                    "email_encryption": {
                        "title": "Email encryption",
                        "type": "string",
                        "example": "string"
                    },
                    "email_password": {
                        "title": "Email password",
                        "type": "string",
                        "example": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "example": "string"
                    },
                    "email_username": {
                        "title": "Email username",
                        "type": "string",
                        "example": "string"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "type": "int",
                        "example": "int"
                    },
                    "created_at": {
                        "title": "Created at",
                        "type": "int",
                        "example": "int"
                    },
                    "is_deleted": {
                        "title": "Is deleted",
                        "type": "boo",
                        "example": "boo"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "SCHEDULER",
            "description": "Endpoints for the SCHEDULER module"
        },
        {
            "name": "Appointments",
            "description": "Available endpoints for Appointments model"
        },
        {
            "name": "Availability",
            "description": "Available endpoints for Availability model"
        },
        {
            "name": "Events",
            "description": "Available endpoints for Events model"
        },
        {
            "name": "MeetingTypes",
            "description": "Available endpoints for MeetingTypes model"
        },
        {
            "name": "Settings",
            "description": "Available endpoints for Settings model"
        },
        {
            "name": "SpaceAvailability",
            "description": "Available endpoints for SpaceAvailability model"
        },
        {
            "name": "Space",
            "description": "Available endpoints for Space model"
        },
        {
            "name": "SystemSettings",
            "description": "Available endpoints for SystemSettings model"
        }
    ]
}